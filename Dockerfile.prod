######################### BUILDER #########################

# Allows the final image size to decrease by 50%
# by building some of the wheels upfront and discarding most of the required 
# C dependencies in the final build.

FROM python:3.9.0-slim as builder

WORKDIR /usr/src/app

# install gcc compiler, make utility, 
# postgres and image processing dependencies
RUN apt-get update \
        && apt-get install -y gcc make libpq-dev libjpeg-dev libpng-dev

COPY ./requirements.txt .

# Build wheels for dependencies that do not provide them out of the box
RUN pip install --upgrade pip
RUN pip wheel --no-cache-dir --wheel-dir /usr/src/app/wheels -r requirements.txt


######################### FINAL #########################

FROM python:3.9.0-slim

# create directory for the app user
RUN mkdir -p /home/app

# create app group and user
RUN addgroup --system app && adduser --system --group app

# create the appropriate directories
ENV HOME=/home/app
ENV APP_HOME=$APP_HOME/web
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/staticfiles
RUN mkdir $APP_HOME/mediafiles
WORKDIR $APP_HOME

# ensure logs are sent straight to stdout
ENV PYTHONUNBUFFERED 1

# install netcat for entrypoint scripts
RUN apt-get update && apt-get install -y netcat

# install wheels
COPY --from=builder /usr/src/app/wheels /wheels
RUN pip install --upgrade pip
RUN pip install --no-cache /wheels/*

# copy project
COPY ./app $APP_HOME

# chown all the files to the app user
RUN chown -R app:app $APP_HOME

# change to app user
USER app

ENTRYPOINT ["/home/app/web/scripts/entrypoint.prod.sh"]

